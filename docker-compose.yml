version: "3"
services:
   # APIコンテナ
   api:
       # Dockerイメージを指定、こっちはDockerfileからビルドした方を使うのでビルドする
       build: .
       # 文字通り、コンテナに名前つける
       container_name: flask
       # このサービスが公開するポート。"ホスト側のポート番号:コンテナ内のポート番号"
       links:
        - mysql:myMysqlDB
       ports:
       - "5000:5000"
       # ディレクトリをマウントする。"ホスト側のパス:コンテナ側のパス"
       # 共有フォルダみたいに使える
       volumes:
       - "./src/web:/src/web"
       - "./src/backend:/src/backend"
       - "./src/train:/src/train"
       # これで起動しても落ちなくなるおまじない
       tty: true
       depends_on:
           -   mysql
           -   web
   # DBコンテナ
   mysql:
       # こっちのイメージはmysql、事前にDockerHubからpullしておく必要とかはない
       build: src/mysql/
       container_name: mysql
       hostname: 'myMysqlDB'
       command: mysqld --character-set-server=utf8
       restart: always
       ports:
       - "3306"
       volumes:
       # /docker-entrypoint-initdb.dに.sqlや.shを配置すると初めに自動的に実行されるらしいぞ
       - "./src/mysql/init:/docker-entrypoint-initdb.d"
       # /var/lib/mysqlにはDBの情報あるらしく、それをホスト側に保存することでコンテナ閉じてもDBを復元できる
       - "./src/mysql/data:/var/lib/mysql"
#       - "./src/mysql/my.cnf:/etc/mysql/my.cnf"

       # 環境変数
       environment:
           locale-gen: ja_JP.UTF-8
           LANG: ja_JP.UTF-8
           LANGUAGE: ja_JP:en
           MYSQL_ROOT_PASSWORD: root
           MYSQL_DATABASE: mysql_database
           MYSQL_USER: docker
           MYSQL_PASSWORD: docker
       tty: true
   # webコンテナ
   web:
       build: src/web/
       container_name: vue
       volumes:
       - "./src/web:/src/"
       ports:
       - "8080:8080"
       tty: true
